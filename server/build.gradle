plugins {
    id 'com.google.cloud.tools.appengine' version "${googleAppengineVersion}"
    id 'io.spring.dependency-management'
    id 'java'
    id 'org.springframework.boot'
    id 'jacoco-report-aggregation'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://maven.pkg.github.com/ksch-workflows/registration-desk')
        credentials {
            username = project.findProperty('gpr.user')
            password = project.findProperty('gpr.key')
        }
    }
}

bootJar {
    mainClass.set('ksch.BackendApplication')
    archiveFileName = 'app.jar'
}

dependencies {
    implementation "ksch:registration-desk:${registrationDeskVersion}"

    implementation project(':ksch.administration')
    implementation project(':ksch.billing')
    implementation project(':ksch.patientmanagement')
    implementation project(':ksch.visit')

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation project(':commons:testing')
}

test {
    useJUnitPlatform()
}

appengine {
    stage {
        artifact = 'build/libs/app.jar'
    }
    deploy {
        version = 'GCLOUD_CONFIG'
        projectId = 'GCLOUD_CONFIG'
    }
}

def profiles = System.getenv('SPRING_PROFILES_ACTIVE') ?: 'dev'

bootRun {
    args = ["--spring.profiles.active=" + profiles]
    jvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"]
}

tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}
