openapi: 3.1.0
info:
  version: 0.1.0
  title: K.S.C.H. Workflows
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  description: |
    This website contains the HTTP endpoints that are offered by the [backend](https://github.com/ksch-workflows/backend) component for frontend components of the [K.S.C.H. Workflows](https://ksch-workflows.github.io/) project.
servers:
  - url: 'http://example.com/api'
paths:
  /patients:
    post:
      operationId: createPatient
      summary: Create a patient
      requestBody:
        description: Object containing the patient details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
            examples:
              RegisteredPatient:
                summary: Complete registration
                value:
                  name: John Doe
                  gender: MALE
                  patientCategory: GENERAL
                  phoneNumber: '01234567890'
                  residentialAddress: Guesthouse
              Emergency:
                summary: Empty details
                value: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientResponse'
      security:
        - main_auth:
            - 'write:patients'
      tags:
        - Patient
    get:
      operationId: listAllPatients
      summary: List all patients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientListResponse'
      security:
        - main_auth:
            - 'read:patients'
      tags:
        - Patient
  /patients/search:
    post:
      operationId: searchPatients
      summary: Search for patients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientListResponse'
      security:
        - main_auth:
            - 'read:patients'
      tags:
        - Patient
  '/patients/{patientId}':
    get:
      operationId: getPatientById
      summary: Get the details of an individual patient
      parameters:
        - name: patientId
          in: path
          description: The ID of the patient to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientResponse'
              example:
                _id: b5ac2f19-56c3-4db9-9d6d-76a821cff842
                name: John Doe
                gender: MALE
                patientCategory: GENERAL
                phoneNumber: '01234567890'
                residentialAddress: Guesthouse
      security:
        - main_auth:
            - 'read:patients'
      tags:
        - Patient
  '/patients/{patientId}/visits':
    post:
      operationId: createVisit
      summary: Create a visit for a patient
      parameters:
        - name: patientId
          in: path
          description: The ID of the affected patient
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Object containing the visit details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitResponse'
      security:
        - main_auth:
            - 'write:visits'
      tags:
        - Visit
  '/patients/{patientId}/visits/{visitId}':
    get:
      operationId: getVisitById
      summary: Get the details of an individual visit
      parameters:
        - name: patientId
          in: path
          description: The ID of the affected patient
          required: true
          schema:
            type: string
            format: uuid
        - name: visitId
          in: path
          description: The ID of the visit to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitResponse'
      security:
        - main_auth:
            - 'read:visits'
      tags:
        - Visit
components:
  schemas:
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
        - OTHER
    Page:
      type: object
      properties:
        size:
          description: The number of elements in the page
          type: integer
          example: 20
        totalElements:
          description: The total number of elements
          type: integer
          example: 1
        totalPages:
          description: The total number of pages
          type: integer
          example: 1
        number:
          description: The page number
          type: integer
          example: 0
    Patient:
      type: object
      properties:
        name:
          description: 'All the name parts, i.e. first name, middle name, and last name.'
          type: string
          example: John Doe
          minLength: 1
        gender:
          $ref: '#/components/schemas/Gender'
        patientCategory:
          $ref: '#/components/schemas/PatientCategory'
        phoneNumber:
          description: Patient phone number
          type: string
          example: '+1234567890'
          minLength: 1
        residentialAddress:
          description: Patient residential address
          type: string
          example: '1234 Main St, City, State 12345'
          minLength: 1
    PatientCategory:
      type: string
      enum:
        - GENERAL
        - INPATIENT
        - OUTPATIENT
    PatientListResponse:
      type: object
      properties:
        embedded:
          type: object
          properties:
            patientResourceList:
              type: array
              items:
                $ref: '#/components/schemas/PatientResponse'
        page:
          $ref: '#/components/schemas/Page'
    PatientResponse:
      allOf:
        - type: object
          required:
            - _id
          properties:
            _id:
              description: Technical identifier of the patient
              type: string
              format: uuid
        - $ref: '#/components/schemas/Patient'
    VisitRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/VisitType'
    VisitResponse:
      allOf:
        - type: object
          required:
            - _id
            - type
            - opdNumber
            - timeStart
          properties:
            _id:
              description: Technical identifier of the visit
              type: string
              format: uuid
              example: ce1d3f10-eef8-4f3e-a598-928e6d6fcdb9
        - $ref: '#/components/schemas/VisitRequest'
        - type: object
          properties:
            opdNumber:
              description: OPD number of the visit
              type: string
              example: 21-1001
            timeStart:
              description: The time of the patient registration
              type: string
              format: date-time
            timeEnd:
              description: The time of the patient discharge
              type: string
              format: date-time
              example: '2019-08-27T08:07:22Z'
    VisitType:
      type: string
      enum:
        - OPD
        - IPD
        - PHYSIOTHERAPY
        - EMERGENCY
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'http://example.com/api/authorize'
          tokenUrl: 'https://ksch-workflows.eu.auth0.com/oauth/token'
          scopes: {}
tags:
  - name: Patient
    description: People coming into the hospital for treatment.
  - name: Visit
    description: Data about a patient from the time of the registration in the hospital to the time of the discharge.
