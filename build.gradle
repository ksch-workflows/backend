buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'idea'
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'org.sonarqube' version "${sonarcubeVersion}"
    id 'org.springframework.boot' version "${springBootVersion}"
}

allprojects  {
    group = 'org.ks-plus'
    version = '0.1.0-SNAPSHOT'
}

subprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repo.maven.apache.org/maven2' }
    }

    apply plugin: 'java-library'

    sourceCompatibility = 17
    targetCompatibility = 17

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

configure(subprojects.findAll { !it.name.endsWith('.api') } ) {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

        // Testing libraries and frameworks
        testImplementation "org.hamcrest:hamcrest:${hamcrestVersion}"
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"
        testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

        // Lombok
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        testImplementation "org.projectlombok:lombok:${lombokVersion}"

        // Architecture documentation
        compileOnly("org.jmolecules:jmolecules-ddd:${jmoleculesVersion}")
        compileOnly("org.jmolecules:jmolecules-layered-architecture:${jmoleculesVersion}")
    }

    test {
        useJUnitPlatform()
    }

    test.finalizedBy jacocoTestReport
}

configure(subprojects.findAll { it.name.endsWith('.impl') } ) {

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

        // Spring Boot managed dependencies
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        runtimeOnly 'com.h2database:h2'

        // Test
        testImplementation project(':commons:testing')
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }
}

sonarqube {
  properties {
    property "sonar.projectKey", "ksch-workflows_backend"
    property "sonar.organization", "ksch-workflows"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.coverage.jacoco.xmlReportPaths", "./server/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"
  }
}
